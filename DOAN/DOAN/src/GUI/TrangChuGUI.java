package GUI;

import BLL.DanhMucBLL;
import DAO.SanPhamDAO;
import DTO.DanhMucDTO;
import DTO.SanPhamDTO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;

public class TrangChuGUI extends JFrame {
    
    private JPanel productDisplayPanel;
    private JComboBox<String> categoryComboBox;
    private DanhMucBLL danhMucBLL;
    private JTextField searchField;

    public TrangChuGUI() {
        setTitle("C·ª≠a H√†ng Th·ªùi Trang");
        setSize(1000, 700);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());
        setBackground(Color.WHITE);

        danhMucBLL = new DanhMucBLL();
        danhMucBLL.registerTrangChuGUI(this);

        JPanel headerPanel = new JPanel(new BorderLayout());
        headerPanel.setBackground(new Color(160, 250, 160));
        headerPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        JLabel logoLabel = new JLabel("SSS", SwingConstants.CENTER);
        logoLabel.setFont(new Font("Serif", Font.BOLD, 30));

        JPanel authPanel = new JPanel();
        authPanel.setBackground(new Color(160, 250, 160));
        JButton loginButton = new JButton("ƒêƒÉng nh·∫≠p");
        JButton registerButton = new JButton("ƒêƒÉng k√Ω");
        Font buttonFont = new Font("Serif", Font.BOLD, 16);
        loginButton.setFont(buttonFont);
        registerButton.setFont(buttonFont);

        loginButton.setBackground(new Color(100, 200, 100));
        loginButton.setForeground(Color.WHITE);
        registerButton.setBackground(new Color(100, 200, 100));
        registerButton.setForeground(Color.WHITE);

        Dimension buttonSize = new Dimension(100, 30);
        loginButton.setPreferredSize(buttonSize);
        registerButton.setPreferredSize(buttonSize);

        loginButton.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        registerButton.setBorder(BorderFactory.createLineBorder(Color.BLACK));

        authPanel.add(loginButton);
        authPanel.add(registerButton);

        loginButton.addActionListener(e -> new DangNhapGUI(this).setVisible(true));
        registerButton.addActionListener(e -> new DangKiGUI(TrangChuGUI.this).setVisible(true));

        headerPanel.add(logoLabel, BorderLayout.CENTER);
        headerPanel.add(authPanel, BorderLayout.EAST);
        add(headerPanel, BorderLayout.NORTH);

        JPanel menuPanel = new JPanel();
        menuPanel.setBackground(Color.WHITE);
        menuPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 10));

        String[] menuItems = {"Hot Trend", "Blog", "CSKH"};
        for (String item : menuItems) {
            JButton menuButton = new JButton(item);
            menuButton.setContentAreaFilled(false);
            menuButton.setBorderPainted(false);
            menuButton.setFont(new Font("Serif", Font.PLAIN, 18));
            menuButton.setOpaque(true);
            menuButton.setBackground(new Color(100, 200, 100));
            menuButton.setForeground(Color.WHITE);
            menuPanel.add(menuButton);

            if (item.equals("Hot Trend")) {
                menuButton.addActionListener(e -> showHotTrendContent());
            } else if (item.equals("Blog")) {
                menuButton.addActionListener(e -> showBlogContent());
            } else if (item.equals("CSKH")) {
                menuButton.addActionListener(e -> showCSKHContent());
            }
        }

        categoryComboBox = new JComboBox<>();
        categoryComboBox.setFont(new Font("Serif", Font.PLAIN, 16));
        categoryComboBox.setBackground(new Color(100, 200, 100));
        categoryComboBox.setForeground(Color.WHITE);
        updateCategoryComboBox();
        menuPanel.add(categoryComboBox);

        categoryComboBox.addActionListener(e -> {
            String selected = (String) categoryComboBox.getSelectedItem();
            if (selected != null && !selected.equals("Ch·ªçn danh m·ª•c")) {
                showCategoryProducts(selected);
            } else {
                loadProducts(null);
            }
        });

        searchField = new JTextField(20);
        JButton searchButton = new JButton("üîç");
        searchButton.setBackground(new Color(100, 200, 100));
        searchButton.setForeground(Color.WHITE);

        searchButton.addActionListener(e -> {
            String keyword = searchField.getText().trim().toLowerCase();
            SanPhamDAO dao = new SanPhamDAO();
            ArrayList<SanPhamDTO> allProducts = dao.selectAll();
            ArrayList<SanPhamDTO> filteredProducts = new ArrayList<>();

            for (SanPhamDTO sp : allProducts) {
                if (sp.getSoLuongTonKho() > 0 && sp.getTenSanPham().toLowerCase().contains(keyword)) {
                    filteredProducts.add(sp);
                }
            }

            if (filteredProducts.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);
            }

            loadProducts(filteredProducts);
        });

        menuPanel.add(searchField);
        menuPanel.add(searchButton);

        JPanel topPanel = new JPanel(new BorderLayout());
        topPanel.setBackground(Color.WHITE);
        topPanel.add(headerPanel, BorderLayout.NORTH);
        topPanel.add(menuPanel, BorderLayout.CENTER);
        add(topPanel, BorderLayout.NORTH);

        productDisplayPanel = new JPanel(new GridLayout(0, 3, 10, 10));
        productDisplayPanel.setBackground(Color.WHITE);
        productDisplayPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        JScrollPane scrollPane = new JScrollPane(productDisplayPanel);
        scrollPane.setBackground(Color.WHITE);
        scrollPane.setOpaque(true);
        scrollPane.getVerticalScrollBar().setBackground(Color.WHITE);
        scrollPane.getHorizontalScrollBar().setBackground(Color.WHITE);
        add(scrollPane, BorderLayout.CENTER);

        loadProducts(null);
    }

    public void updateCategoryComboBox() {
        categoryComboBox.removeAllItems();
        categoryComboBox.addItem("Ch·ªçn danh m·ª•c");
        ArrayList<DanhMucDTO> danhMucList = danhMucBLL.getAllDanhMuc();
        for (DanhMucDTO dm : danhMucList) {
            categoryComboBox.addItem(dm.getTenDanhMuc());
        }
    }

    private void showCategoryProducts(String categoryName) {
        JFrame frame = new JFrame("Danh M·ª•c " + categoryName);
        frame.setSize(800, 700);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLocationRelativeTo(null);

        if (categoryName.equals("Qu·∫ßn jean")) {
            frame.add(new QuanJeanGUI(frame));
        } else if (categoryName.equals("Qu·∫ßn short")) {
            frame.add(new QuanShortGUI(frame));
        } else if (categoryName.equals("√Åo thun")) {
            frame.add(new AoThunGUI(frame));
        } else if (categoryName.equals("√Åo kho√°c")) {
            frame.add(new AoKhoacGUI(frame));
        } else if (categoryName.equals("√Åo hoodie")) {
            frame.add(new AoHoodieGUI(frame));
        }
        frame.setVisible(true);
    }

    private void showHotTrendContent() {
        JFrame trendFrame = new JFrame("Hot Trend - Xu H∆∞·ªõng Th·ªùi Trang");
        trendFrame.setSize(800, 600);
        trendFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        trendFrame.setLocationRelativeTo(null);
        trendFrame.setLayout(new BorderLayout());
        trendFrame.setBackground(Color.WHITE);

        JPanel mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBackground(Color.WHITE);
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        JLabel titleLabel = new JLabel("Xu H∆∞·ªõng Th·ªùi Trang N·ªïi B·∫≠t", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Serif", Font.BOLD, 28));
        titleLabel.setForeground(new Color(100, 200, 100));
        mainPanel.add(titleLabel, BorderLayout.NORTH);

        JPanel contentPanel = new JPanel();
        contentPanel.setBackground(Color.WHITE);
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));

        JLabel introLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi g√≥c xu h∆∞·ªõng th·ªùi trang c·ªßa ShopQuanAo123! Ch√∫ng t√¥i mang ƒë·∫øn nh·ªØng phong c√°ch m·ªõi nh·∫•t, "
            + "t·ª´ th·ªùi trang ƒë∆∞·ªùng ph·ªë nƒÉng ƒë·ªông ƒë·∫øn nh·ªØng b·ªô s∆∞u t·∫≠p thanh l·ªãch, gi√∫p b·∫°n lu√¥n d·∫´n ƒë·∫ßu trong m·ªçi ho√†n c·∫£nh. "
            + "M√πa n√†y, h√£y kh√°m ph√° nh·ªØng ki·ªÉu d√°ng ƒëang l√†m m∆∞a l√†m gi√≥ tr√™n to√†n c·∫ßu!</p></html>");
        introLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        introLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(introLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JLabel trendLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "<b>Xu H∆∞·ªõng Thu 2025:</b> M√πa thu nƒÉm nay, nh·ªØng gam m√†u ƒë·∫≠m nh∆∞ xanh ng·ªçc l·ª•c b·∫£o, ƒë·ªè r∆∞·ª£u vang v√† n√¢u ƒë·∫•t ƒëang chi·∫øm lƒ©nh s√†n di·ªÖn th·ªùi trang. "
            + "√Åo blazer oversize k·∫øt h·ª£p v·ªõi qu·∫ßn jeans √¥m ho·∫∑c qu·∫ßn t√¢y may ƒëo t·∫°o n√™n v·∫ª ngo√†i hi·ªán ƒë·∫°i v√† s√†nh ƒëi·ªáu. ƒê·ª´ng qu√™n th√™m m·ªôt chi·∫øc khƒÉn len m·ªèng "
            + "ho·∫∑c m≈© beret ƒë·ªÉ ho√†n thi·ªán phong c√°ch. Ngo√†i ra, nh·ªØng chi·∫øc √°o kho√°c trench coat d√†i c√πng b·ªët cao c·ªï c≈©ng l√† l·ª±a ch·ªçn kh√¥ng th·ªÉ b·ªè qua.</p></html>");
        trendLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        trendLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(trendLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JLabel tipsLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "<b>M·∫πo Ph·ªëi ƒê·ªì:</b> ƒê·ªÉ n·ªïi b·∫≠t, h√£y th·ª≠ k·∫øt h·ª£p √°o thun basic v·ªõi qu·∫ßn short v·∫£i v√† √°o kho√°c bomber cho phong c√°ch tr·∫ª trung. "
            + "N·∫øu b·∫°n y√™u th√≠ch s·ª± thanh l·ªãch, m·ªôt chi·∫øc √°o s∆° mi l·ª•a ph·ªëi c√πng ch√¢n v√°y midi v√† gi√†y cao g√≥t s·∫Ω l√† l·ª±a ch·ªçn ho√†n h·∫£o. "
            + "ƒê·ª´ng ng·∫ßn ng·∫°i th·ª≠ nghi·ªám v·ªõi c√°c l·ªõp layer nh∆∞ √°o len m·ªèng b√™n trong √°o kho√°c da ƒë·ªÉ t·∫°o ƒëi·ªÉm nh·∫•n ƒë·ªôc ƒë√°o. "
            + "H√£y gh√© qua c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i ƒë·ªÉ t√¨m nh·ªØng m√≥n ƒë·ªì ph√π h·ª£p v·ªõi phong c√°ch c·ªßa b·∫°n!</p></html>");
        tipsLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        tipsLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(tipsLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JButton shopButton = new JButton("Kh√°m Ph√° B·ªô S∆∞u T·∫≠p");
        shopButton.setFont(new Font("Serif", Font.BOLD, 16));
        shopButton.setBackground(new Color(100, 200, 100));
        shopButton.setForeground(Color.WHITE);
        shopButton.setAlignmentX(Component.CENTER_ALIGNMENT);
        shopButton.addActionListener(e -> trendFrame.dispose());
        contentPanel.add(shopButton);

        JScrollPane scrollPane = new JScrollPane(contentPanel);
        scrollPane.setBackground(Color.WHITE);
        scrollPane.setBorder(null);
        mainPanel.add(scrollPane, BorderLayout.CENTER);

        trendFrame.add(mainPanel);
        trendFrame.setVisible(true);
    }

    private void showBlogContent() {
        JFrame blogFrame = new JFrame("Blog - Tin T·ª©c Th·ªùi Trang");
        blogFrame.setSize(800, 600);
        blogFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        blogFrame.setLocationRelativeTo(null);
        blogFrame.setLayout(new BorderLayout());
        blogFrame.setBackground(Color.WHITE);

        JPanel mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBackground(Color.WHITE);
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        JLabel titleLabel = new JLabel("Ch√†o M·ª´ng ƒê·∫øn V·ªõi Blog Th·ªùi Trang", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Serif", Font.BOLD, 28));
        titleLabel.setForeground(new Color(100, 200, 100));
        mainPanel.add(titleLabel, BorderLayout.NORTH);

        JPanel contentPanel = new JPanel();
        contentPanel.setBackground(Color.WHITE);
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));

        JLabel introLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "Blog th·ªùi trang c·ªßa ShopQuanAo123 l√† n∆°i b·∫°n t√¨m th·∫•y ngu·ªìn c·∫£m h·ª©ng b·∫•t t·∫≠n! Ch√∫ng t√¥i c·∫≠p nh·∫≠t li√™n t·ª•c c√°c xu h∆∞·ªõng m·ªõi, "
            + "h∆∞·ªõng d·∫´n ph·ªëi ƒë·ªì chi ti·∫øt v√† nh·ªØng b√≠ quy·∫øt ƒë·ªÉ n√¢ng t·∫ßm phong c√°ch c√° nh√¢n. H√£y c√πng kh√°m ph√° nh·ªØng b√†i vi·∫øt th√∫ v·ªã ƒë·ªÉ bi·∫øn m·ªói ng√†y "
            + "tr·ªü th√†nh m·ªôt s√†n di·ªÖn th·ªùi trang c·ªßa ri√™ng b·∫°n!</p></html>");
        introLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        introLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(introLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JLabel articleLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "<b>Th·ªùi Trang M√πa Thu 2025:</b> M√πa thu n√†y, h√£y l√†m m·ªõi t·ªß ƒë·ªì c·ªßa b·∫°n v·ªõi nh·ªØng gam m√†u ·∫•m √°p nh∆∞ cam ch√°y, v√†ng m√π t·∫°t v√† n√¢u ƒë·∫•t. "
            + "√Åo kho√°c trench coat d√†i, khƒÉn len oversized v√† b·ªët cao c·ªï l√† b·ªô ba ho√†n h·∫£o cho ti·∫øt tr·ªùi se l·∫°nh. B·∫°n c√≥ th·ªÉ ph·ªëi √°o thun basic v·ªõi qu·∫ßn short v·∫£i "
            + "v√† th√™m m·ªôt chi·∫øc √°o cardigan m·ªèng ƒë·ªÉ t·∫°o phong c√°ch nƒÉng ƒë·ªông nh∆∞ng v·∫´n tinh t·∫ø. ƒê·ªëi v·ªõi nh·ªØng d·ªãp ƒë·∫∑c bi·ªát, h√£y th·ª≠ √°o s∆° mi l·ª•a k·∫øt h·ª£p v·ªõi ch√¢n v√°y b√∫t ch√¨.</p></html>");
        articleLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        articleLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(articleLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JLabel styleLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "<b>B√≠ Quy·∫øt T·∫°o Phong C√°ch:</b> ƒê·ªÉ t·∫°o ·∫•n t∆∞·ª£ng m·∫°nh m·∫Ω, h√£y ch√∫ √Ω ƒë·∫øn c√°c chi ti·∫øt nh·ªè nh∆∞ ph·ª• ki·ªán. M·ªôt chi·∫øc ƒë·ªìng h·ªì tinh t·∫ø, khƒÉn qu√†ng c·ªï ho·∫∑c t√∫i x√°ch mini "
            + "c√≥ th·ªÉ n√¢ng c·∫•p to√†n b·ªô outfit. Ngo√†i ra, h√£y th·ª≠ nghi·ªám v·ªõi c√°c l·ªõp layer ‚Äì v√≠ d·ª•, m·∫∑c √°o len m·ªèng b√™n trong √°o kho√°c da ho·∫∑c k·∫øt h·ª£p √°o hoodie v·ªõi √°o blazer. "
            + "Quan tr·ªçng nh·∫•t, h√£y lu√¥n t·ª± tin v·ªõi phong c√°ch c·ªßa b·∫°n! Gh√© thƒÉm ShopQuanAo123 ƒë·ªÉ t√¨m nh·ªØng m√≥n ƒë·ªì ph√π h·ª£p v·ªõi m·ªçi c√° t√≠nh.</p></html>");
        styleLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        styleLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(styleLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JButton visitShopButton = new JButton("Xem B·ªô S∆∞u T·∫≠p");
        visitShopButton.setFont(new Font("Serif", Font.BOLD, 16));
        visitShopButton.setBackground(new Color(100, 200, 100));
        visitShopButton.setForeground(Color.WHITE);
        visitShopButton.setAlignmentX(Component.CENTER_ALIGNMENT);
        visitShopButton.addActionListener(e -> blogFrame.dispose());
        contentPanel.add(visitShopButton);

        JScrollPane scrollPane = new JScrollPane(contentPanel);
        scrollPane.setBackground(Color.WHITE);
        scrollPane.setBorder(null);
        mainPanel.add(scrollPane, BorderLayout.CENTER);

        blogFrame.add(mainPanel);
        blogFrame.setVisible(true);
    }

    private void showCSKHContent() {
        JFrame cskhFrame = new JFrame("ChƒÉm S√≥c Kh√°ch H√†ng - Li√™n H·ªá");
        cskhFrame.setSize(800, 600);
        cskhFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        cskhFrame.setLocationRelativeTo(null);
        cskhFrame.setLayout(new BorderLayout());
        cskhFrame.setBackground(Color.WHITE);

        JPanel mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBackground(Color.WHITE);
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        JLabel titleLabel = new JLabel("Ch√∫ng T√¥i Lu√¥n S·∫µn S√†ng H·ªó Tr·ª£!", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Serif", Font.BOLD, 28));
        titleLabel.setForeground(new Color(100, 200, 100));
        mainPanel.add(titleLabel, BorderLayout.NORTH);

        JPanel contentPanel = new JPanel();
        contentPanel.setBackground(Color.WHITE);
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));

        JLabel introLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "ShopQuanAo123 lu√¥n ƒë·∫∑t s·ª± h√†i l√≤ng c·ªßa kh√°ch h√†ng l√™n h√†ng ƒë·∫ßu. ƒê·ªôi ng≈© chƒÉm s√≥c kh√°ch h√†ng c·ªßa ch√∫ng t√¥i s·∫µn s√†ng h·ªó tr·ª£ b·∫°n v·ªõi m·ªçi v·∫•n ƒë·ªÅ, "
            + "t·ª´ theo d√µi ƒë∆°n h√†ng, t∆∞ v·∫•n s·∫£n ph·∫©m ƒë·∫øn gi·∫£i ƒë√°p c√°c th·∫Øc m·∫Øc v·ªÅ d·ªãch v·ª•. Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn tr·∫£i nghi·ªám mua s·∫Øm tuy·ªát v·ªùi nh·∫•t!</p></html>");
        introLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        introLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(introLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JLabel contactInfo = new JLabel("<html>"
            + "<p style='width: 700px;'><b>Li√™n H·ªá V·ªõi Ch√∫ng T√¥i:</b></p>"
            + "<p style='width: 700px;'>- <b>Email:</b> hotro@shopquanao123.com</p>"
            + "<p style='width: 700px;'>- <b>ƒêi·ªán tho·∫°i:</b> (+84) 123 456 789</p>"
            + "<p style='width: 700px;'>- <b>Discord:</b> ShopQuanAo123#1234</p>"
            + "<p style='width: 700px;'>- <b>Gi·ªù l√†m vi·ªác:</b> Th·ª© Hai - Th·ª© B·∫£y, 9h-18h</p>"
            + "<p style='width: 700px; text-align: justify;'>B·∫°n c√≥ th·ªÉ li√™n h·ªá qua email ho·∫∑c ƒëi·ªán tho·∫°i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ngay l·∫≠p t·ª©c. Ngo√†i ra, tham gia c·ªông ƒë·ªìng Discord c·ªßa ch√∫ng t√¥i ƒë·ªÉ nh·∫≠n th√¥ng tin c·∫≠p nh·∫≠t v√† t∆∞∆°ng t√°c tr·ª±c ti·∫øp v·ªõi ƒë·ªôi ng≈©!</p>"
            + "</html>");
        contactInfo.setFont(new Font("Serif", Font.PLAIN, 16));
        contactInfo.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(contactInfo);
        contentPanel.add(Box.createVerticalStrut(20));

        JLabel faqLabel = new JLabel("<html><p style='width: 700px; text-align: justify;'>"
            + "<b>C√¢u H·ªèi Th∆∞·ªùng G·∫∑p:</b><br>"
            + "- <b>L√†m th·∫ø n√†o ƒë·ªÉ theo d√µi ƒë∆°n h√†ng?</b> ƒêƒÉng nh·∫≠p v√†o t√†i kho·∫£n c·ªßa b·∫°n v√† truy c·∫≠p m·ª•c 'ƒê∆°n H√†ng C·ªßa T√¥i' ƒë·ªÉ xem tr·∫°ng th√°i ƒë∆°n h√†ng.<br>"
            + "- <b>Ch√≠nh s√°ch ƒë·ªïi tr·∫£ c·ªßa shop l√† g√¨?</b> Ch√∫ng t√¥i h·ªó tr·ª£ ƒë·ªïi tr·∫£ trong v√≤ng 30 ng√†y ƒë·ªëi v·ªõi c√°c s·∫£n ph·∫©m ch∆∞a s·ª≠ d·ª•ng v√† c√≤n nguy√™n tr·∫°ng.<br>"
            + "- <b>Shop c√≥ giao h√†ng qu·ªëc t·∫ø kh√¥ng?</b> C√≥, ch√∫ng t√¥i giao h√†ng ƒë·∫øn h∆°n 50 qu·ªëc gia. Vui l√≤ng xem chi ti·∫øt t·∫°i trang th√¥ng tin v·∫≠n chuy·ªÉn.<br>"
            + "- <b>T√¥i c√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng kh√¥ng?</b> B·∫°n c√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng tr∆∞·ªõc khi n√≥ ƒë∆∞·ª£c x·ª≠ l√Ω. Li√™n h·ªá ngay v·ªõi ch√∫ng t√¥i qua email ho·∫∑c ƒëi·ªán tho·∫°i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.<br>"
            + "- <b>L√†m sao ƒë·ªÉ ch·ªçn size ph√π h·ª£p?</b> M·ªói s·∫£n ph·∫©m ƒë·ªÅu c√≥ b·∫£ng size chi ti·∫øt. N·∫øu c·∫ßn t∆∞ v·∫•n, ƒë·ªôi ng≈© c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng gi√∫p b·∫°n!</p></html>");
        faqLabel.setFont(new Font("Serif", Font.PLAIN, 16));
        faqLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        contentPanel.add(faqLabel);
        contentPanel.add(Box.createVerticalStrut(20));

        JButton contactButton = new JButton("Tham Gia Discord");
        contactButton.setFont(new Font("Serif", Font.BOLD, 16));
        contactButton.setBackground(new Color(100, 200, 100));
        contactButton.setForeground(Color.WHITE);
        contactButton.setAlignmentX(Component.CENTER_ALIGNMENT);
        contactButton.addActionListener(e -> JOptionPane.showMessageDialog(cskhFrame, "Tham gia Discord: ShopQuanAo123#1234"));
        contentPanel.add(contactButton);

        JScrollPane scrollPane = new JScrollPane(contentPanel);
        scrollPane.setBackground(Color.WHITE);
        scrollPane.setBorder(null);
        mainPanel.add(scrollPane, BorderLayout.CENTER);

        cskhFrame.add(mainPanel);
        cskhFrame.setVisible(true);
    }

    public void onLoginSuccess(String vaiTro) {
        setVisible(false);
        if ("admin".equalsIgnoreCase(vaiTro)) {
            QuanTriVienGUI quanTriVienGUI = new QuanTriVienGUI(this);
            quanTriVienGUI.setVisible(true);
        } else {
            NguoiDungGUI nguoiDungGUI = new NguoiDungGUI();
            nguoiDungGUI.setVisible(true);
        }
    }

    private void loadProducts(ArrayList<SanPhamDTO> productList) {
        productDisplayPanel.removeAll();

        if (productList == null) {
            SanPhamDAO dao = new SanPhamDAO();
            productList = dao.selectAll();
        }

        for (SanPhamDTO sp : productList) {
            if (sp.getSoLuongTonKho() > 0) {
                addProductToView(sp);
            }
        }

        productDisplayPanel.revalidate();
        productDisplayPanel.repaint();
    }

    public void addProductToView(SanPhamDTO sp) {
        JPanel productPanel = new JPanel(new BorderLayout());
        productPanel.setBackground(Color.WHITE);
        productPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        productPanel.putClientProperty("idSanPham", sp.getIdSanPham());

        JLabel imageLabel;
        try {
            if (sp.getHinhAnh() != null && !sp.getHinhAnh().isEmpty()) {
                ImageIcon icon = new ImageIcon(sp.getHinhAnh());
                if (icon.getImageLoadStatus() == java.awt.MediaTracker.COMPLETE) {
                    Image scaledImage = icon.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                    imageLabel = new JLabel(new ImageIcon(scaledImage));
                } else {
                    imageLabel = new JLabel("H√¨nh ·∫¢nh Kh√¥ng H·ª£p L·ªá", SwingConstants.CENTER);
                }
            } else {
                imageLabel = new JLabel("Kh√¥ng C√≥ H√¨nh ·∫¢nh", SwingConstants.CENTER);
            }
        } catch (Exception e) {
            imageLabel = new JLabel("L·ªói T·∫£i H√¨nh ·∫¢nh", SwingConstants.CENTER);
            e.printStackTrace();
        }
        imageLabel.setPreferredSize(new Dimension(200, 200));

        JLabel nameLabel = new JLabel(sp.getTenSanPham(), SwingConstants.CENTER);
        nameLabel.setFont(new Font("Serif", Font.BOLD, 14));

        productPanel.add(imageLabel, BorderLayout.CENTER);
        productPanel.add(nameLabel, BorderLayout.SOUTH);

        productDisplayPanel.add(productPanel);

        productDisplayPanel.revalidate();
        productDisplayPanel.repaint();
    }

    public void removeProductFromView(String idSanPham) {
        for (Component comp : productDisplayPanel.getComponents()) {
            if (comp instanceof JPanel) {
                JPanel productPanel = (JPanel) comp;
                String panelId = (String) productPanel.getClientProperty("idSanPham");
                if (idSanPham.equals(panelId)) {
                    productDisplayPanel.remove(productPanel);
                    break;
                }
            }
        }
        productDisplayPanel.revalidate();
        productDisplayPanel.repaint();
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new TrangChuGUI().setVisible(true));
    }
}